
import * as core from './core';
import log from './core/log';
import moduleController from './controllers/moduleController';
import pageController from './controllers/pageController';
import templateController from './controllers/templateController';
import router from './router';

export default class App {

	constructor(opts){

		this._defaults = {
			autoInit: true,
			intro: null,
			baseUrl: window.location.href,
			proxy: null,
			router: {
				async: true,
				adapter: null,
				cache: true,
				runFirstRoute: true,
				transitionDuration: 500,
				routes: [
					'/',
					':section',
					':section/:id'
				]
			},
			moduleController: {},
			templateController: {},
			pageController: {
				templates: {}
			}
		};

		this.options            = core.merge({}, this._defaults, opts);

		this.initialized        = false;

		this.core               = core;
		this.moduleController   = moduleController;
		this.templateController = templateController;
		this.router             = router;
		this.intro              = this.options.intro;

		// page controller init
		this.options.pageController.baseUrl = this.options.baseUrl;
		this.options.pageController.proxy   = this.options.proxy;

		pageController.init(this.options.pageController);

		// core
		this.core.detect.init();

		// module controller
		this.moduleController.init(this.options.moduleController);

		// template controller
		this.options.templateController.baseUrl = this.options.baseUrl;

		this.templateController.init(this.options.templateController);

		// router init
		this.options.router.baseUrl = this.options.baseUrl;
		this.options.router.proxy   = this.options.proxy;

		this.router.init(this.options.router);

		if( this.options.autoInit ){
			this.init();
		}
	}

	init(){

		if( this.initialized ){
			return;
		}

		log('App :: Init');
		log('warn', 'App :: TODO :: Base events class');
		log('warn', 'App :: TODO :: Account for pages / posts in data adapters');

		this.router.start();

		if( this.intro && typeof this.intro.init == 'function' ){
			this.intro.init();
		}

		this.initialized = true;
	}

	configure(opts){
		this.options = core.merge({}, this.options, opts);
	}

	addModule(handle, moduleConfig){
		this.moduleController.addModule(handle, moduleConfig);
	}

	navigate(url, silent){

	}
}
