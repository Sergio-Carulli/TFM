
import log from './../core/log';
import XHR from './../core/xhr';

export default {

	init(opts){

		this.defaults = {
			baseUrl: '/',
			proxy: null
		};

		this.options = Object.assign({}, this.defaults, opts);
		this.type = 'json';
		this.apiUrl = 'wp-json/wp/v2/pages';

		this.xhr = new XHR(this.type);
	},

	getData(matchConfig){

		const slug = matchConfig.uri[ matchConfig.uri.length - 1 ];
		const base = this.options.proxy ? this.options.proxy : this.options.baseUrl;
		const url = base + this.apiUrl + `?slug=${ matchConfig.uri }&per_page=1&page=1`;

		return new Promise((resolve, reject)=>{

			this.xhr.get(url)
			.then((res)=>{
				let response = typeof res.response == 'object' ? res.response : JSON.parse(res.response);
				const data = this.formatData(response);
				resolve(data);
			})
			.catch((err)=>{
				reject(err);
			});
		});
	},

	formatData(data){

		let _d = {
			globals: {
				title: {
					rendered: 'Page Title Here'
				}
			},
			locals: {

			},
			modules: [
				{
					acf_fc_layout: 'hero',
					handle: 'hero',
					heading: 'Hero Title',
					subhead: 'Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.'
				},
				{
					acf_fc_layout: 'image-carousel',
					handle: 'image-carousel',
					images: [ '1.jpg', '2.jpg', '3.jpg' ]
				}
			]
		};

		return _d;




		//

		let d = {
			locals: {},
			globals: {},
			modules: []
		}

		if( data.length == 0 ){
			return d;
		}

		data = data[ 0 ];

		d.globals = this.formatGlobals(data);
		d.locals  = this.formatLocals(data);
		d.modules = this.formatModules(data);

		return d;
	},

	formatModules(data){

		let modules = data.acf.modules || [];

		for( let i = modules.length; i--; ){
			modules[ i ].handle = modules[ i ].acf_fc_layout;
		}

		return modules;
	},

	formatLocals(data){
		return {
			content: data.content
		}
	},

	formatGlobals(data){
		return {
			title: data.title
		}
	}
}
