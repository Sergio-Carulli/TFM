
import twig from 'twig';

import * as core from './../core';
import log from './../core/log';
import merge from './../core/merge';
import XHR from './../core/xhr';

let cache = [];

export default {

	init(opts){

		this.defaults = {
			baseUrl: window.location.href
		};

		this.options = merge({}, this.defaults, opts);

		log('TemplateController :: Init');
	},

	getTemplate(templateId, templateUrl){

		// let id = templateId || templateUrl;

		// if( core.env.isDev() ){
		// 	cache = [];
		// 	twig.cache();
		// }

		return new Promise((resolve, reject)=>{

			if( cache.indexOf(templateId) > -1 || !templateUrl ){
				resolve(twig.twig({ ref: templateId }));
			}
			else {
				twig.twig({
					id: templateId,
					href: templateUrl,
					base: this.options.baseUrl,
					allowInlineIncludes: true,
					autoescape: true,
					load: (template)=>{
						cache.push(templateId);
						resolve(template);
					}
				});
			}
		});


	}
}
