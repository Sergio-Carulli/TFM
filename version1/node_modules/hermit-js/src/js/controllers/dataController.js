
import * as core from './../core';
import DataStore from './../core/dataStore';
import moduleController from './moduleController';

export default class DataController {

	constructor(opts){

		this.defaults = {
			cache: true,
			baseUrl: '',
			adapter: null,
			proxy: null
		};

		this.options = Object.assign({}, this.defaults, opts);

		this.adapter = this.options.adapter; // null
		this.dataStore = new DataStore({ enabled: this.options.cache });

		this.use(this.options.adapter);
	}

	getData(match){

		// return value should be cleanly formatted data
		// {
		// 	globals: {},
		// 	locals: {},
		// 	modules: [],
		//  title: 'title here'
		// }

		// check cache before requesting from adapter
		if( match.uri == '/' ){
			match.uri = 'home';
		}

		if( this.dataStore.get(match.uri) ){

			return new Promise((resolve, reject)=>{
				resolve(this.dataStore.get(match.uri));
			});

		}
		else {

			return new Promise((resolve, reject)=>{
				this.adapter.getData(match)
					.then((data)=>{

						this.dataStore.set(match.uri, data);

						moduleController.renderModuleMarkup(data.modules)
							.then((moduleHtml)=>{
								data.modules.rendered = moduleHtml;
								resolve(data);
							});
					})
					.catch(reject);
			});

		}

	}

	use(adapter){

		this.adapter = adapter;

		if( this.adapter && typeof this.adapter.init == 'function' ){
			this.adapter.init({
				baseUrl: this.options.baseUrl,
				proxy: this.options.proxy
			});
		}
	}
}
