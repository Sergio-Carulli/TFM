<!DOCTYPE html>
<html lang="en">
<head>
    <% include ../partials/head.ejs %>
    <script src="<%- contextPath %>/hylar-client.js"></script>
</head>
<body>
<header>
    <% include ../partials/menu.ejs %>
</header>

<section class="hero is-dark">
    <div class="hero-body">
        <p class="title">
            Knowledge base
        </p>
    </div>
</section>

<section class="section">
        <% if (kb.length != 0) { %>
            <article class="message is-info">
                <div class="message-body">
                    The knowledge base currently contains <%- kb.length %> facts (<%- kb.map(entry => { return entry }).filter(fact => { return fact.explicit }).length %> explicit, <%- kb.map(entry => { return entry }).filter(fact => { return !fact.explicit }).length %>  implicit).
                    <p>
                        <b><%- entailment %></b> entailment is provided (<%- axioms.length || 'no' %> axioms).
                    </p>
                    <p>
                        <i class="fas fa-bolt"></i> <a onclick="areYouSure(this, '<%- contextPath %>/explore/resetKB')">Clear the knowledge base</a>
                    </p>
                </div>
            </article>
        <% } %>
            <article class="message <% if (kb.length == 0) {%>is-warning<% } else if (consistent) { %>is-success<% } else { %>is-danger<% }%>">
                <div class="message-body">
                    <% if (kb.length == 0) {%><i class="fas fa-exclamation-circle"></i> Base is empty<% } else if (consistent) { %><i class="far fa-check-circle"></i> Knowledge base consistent<% } else { %><i class="fas fa-exclamation-triangle"></i> <a href="/explore/%23default/IFALSE"> Inconsistency detected</a><% } %>
                </div>
            </article>
</section>

<section class="section">
    <table id="facts-list" class="table is-fullwidth is-bordered table-responsive">
        <thead>
        <tr class="is-warning">
            <th>State</th>
            <th>Subject</th>
            <th>Predicate</th>
            <th>Object</th>
            <th>Graph</th>
            <% if (isTagBased) {%>
            <th>Validity</th>
            <th>Details</th>
            <% } %>
        </tr>
        </thead>
        <tbody>
        <% for (var i = 0; i < kb.length; i++) { %>
        <tr class="fact-entry <%- kb[i].isAxiom ? 'fact-entry-axiom' : '' %>" data-fact-id="<%- i %>" id="fact-<%- i %>">
            <td>
                <% if (kb[i].isAxiom) { %>
                    <span class="fact fact-state axiom"><%- entailment %>.Axiom</span>
                <% } else if (kb[i].explicit) { %>
                    <span class="fact fact-state explicit">Explicit</span>
                <% } else { %>
                    <span class="fact fact-state implicit">Implicit</span>
                <% } %>
            </td>
            <% if (kb[i].predicate == 'FALSE') { %>
            <td colspan="6" class="fact is-light has-text-centered">
                 False fact
            </td>
            <% } else { %>
            <td data-atom='<%- kb[i]._self.subject %>' id="subject-<%- i %>">
                <code><%- kb[i].subject %></code>
            </td>
            <td data-atom='<%- kb[i]._self.predicate %>'  id="predicate-<%- i %>">
                <code><%- kb[i].predicate %></code>
            </td>
            <td data-atom='<%- kb[i]._self.object %>'  id="object-<%- i %>">
                <code><%- kb[i].object %></code>
            </td>
            <td>
                <code><%- kb[i].graph %></code>
            </td>
            <% if (isTagBased) { %>
            <td class="has-text-centered">
                <% if (kb[i].isValid) { %>
                    <span class="fact fact-valid-true">Valid</span>
                <% } else { %>
                    <span class="fact fact-valid-false">Invalid</span>
                <% } %>
            </td>
            <td class="has-text-centered">
                <!-- Analyzing consequences -->
                <% if (kb[i].causedBy.length > 0) { %>
                <ul>
                    <% for (let cause of kb[i].causedBy) { %>
                    <li>
                        <a <% for (let fact of cause) { %>data-fact-<%- kb.map(entry => { return entry.asString }).indexOf(fact.asString) %> <% } %> onclick="highlightFacts(this, '<%- entailment.toLowerCase() %>')">Derivation #<%- kb[i].causedBy.indexOf(cause) %></a>
                    </li>
                    <% } %>
                </ul>
                <% } %>
            </td>
            <% } %>
            <% } %>
        </tr>
        <% } %>
        </tbody>
    </table>

    <div class="modal">
        <div class="modal-background"></div>
        <div class="modal-content">
            oui
        </div>
        <button class="modal-close is-large" aria-label="close"></button>
    </div>
</section>
</body>